// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwiftCode.BBS.EntityFramework;

namespace SwiftCode.BBS.EntityFramework.Migrations
{
    [DbContext(typeof(SwiftCodeBbsContext))]
    [Migration("20210531122134_Update_Articles_Col")]
    partial class Update_Articles_Col
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Url")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.ToTable("Advertisement");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("Cover")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreateUserInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Title")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Traffic")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateUserInfoId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.ArticleComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("ArticleComment");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tag")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Title")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Traffic")
                        .HasColumnType("int");

                    b.Property<int?>("UserInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserInfoId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.QuestionComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAdoption")
                        .HasColumnType("bit");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int?>("UserInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("QuestionComment");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.UserCollectionArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserInfoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("UserInfoId");

                    b.ToTable("UserCollectionArticle");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("HeadPortrait")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("LoginName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("LoginPassWord")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Phone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("UserName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.Article", b =>
                {
                    b.HasOne("SwiftCode.BBS.Model.Models.UserInfo", "CreateUserInfo")
                        .WithMany("Articles")
                        .HasForeignKey("CreateUserInfoId");

                    b.Navigation("CreateUserInfo");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.ArticleComment", b =>
                {
                    b.HasOne("SwiftCode.BBS.Model.Models.Article", "Article")
                        .WithMany("ArticleComments")
                        .HasForeignKey("ArticleId");

                    b.HasOne("SwiftCode.BBS.Model.Models.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoId");

                    b.Navigation("Article");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.Question", b =>
                {
                    b.HasOne("SwiftCode.BBS.Model.Models.UserInfo", "UserInfo")
                        .WithMany("Questions")
                        .HasForeignKey("UserInfoId");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.QuestionComment", b =>
                {
                    b.HasOne("SwiftCode.BBS.Model.Models.Question", "Question")
                        .WithMany("QuestionComments")
                        .HasForeignKey("QuestionId");

                    b.HasOne("SwiftCode.BBS.Model.Models.UserInfo", "UserInfo")
                        .WithMany()
                        .HasForeignKey("UserInfoId");

                    b.Navigation("Question");

                    b.Navigation("UserInfo");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.UserCollectionArticle", b =>
                {
                    b.HasOne("SwiftCode.BBS.Model.Models.Article", null)
                        .WithMany("CollectionArticles")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SwiftCode.BBS.Model.Models.UserInfo", null)
                        .WithMany("CollectionArticles")
                        .HasForeignKey("UserInfoId");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.Article", b =>
                {
                    b.Navigation("ArticleComments");

                    b.Navigation("CollectionArticles");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.Question", b =>
                {
                    b.Navigation("QuestionComments");
                });

            modelBuilder.Entity("SwiftCode.BBS.Model.Models.UserInfo", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("CollectionArticles");

                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
